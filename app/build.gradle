apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.firebase-perf'
//apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.protone.metime"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode libs.versions.versionCode.get().toInteger()
        versionName libs.versions.versionName.get()

        testInstrumentationRunner libs.versions.testInstrumentationRunner.get()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {

    implementation project(path: ':lib_component')
    implementation project(path: ':lib_common')
//    api 'com.google.firebase:firebase-crashlytics-ktx:18.3.3'
//    api 'com.google.firebase:firebase-analytics-ktx:21.2.0'

    if (!isModule.toBoolean()) {
        implementation project(path: ':module_note')
        implementation project(path: ':module_gallery')
        implementation project(path: ':module_music')
        implementation project(path: ':module_config')
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api libs.bundles.baseLibs
    api libs.bundles.componentLibs

    implementation libs.paging

    kapt libs.arouter.compiler

}